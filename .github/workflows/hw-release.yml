name: HW Release

on:
  # Workflow runs when a main branch PR is created
  #pull_request:
  #  branches: [ main ]

  # Workflow can also be run manually
  workflow_dispatch:

jobs:
  build-test:
    uses: amd-isaac/caliptra-sw/.github/workflows/build-test.yml@isaac_nightly_release

  hw-release-test:
    name: HW Release Test
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      # FIXME: What's this needed for?
      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Update the Caliptra RTL submodule and rebuild registers
        run: |
          git submodule update --remote hw-latest/caliptra-rtl
          cargo run --release --manifest-path registers/bin/generator/Cargo.toml -- hw-latest/caliptra-rtl registers/src/

      - name: Run git status
        id: status
        #run: echo "::set-output name=status::$(git status -s)"
        run: echo "status=$(git status -s)" >> $GITHUB_OUTPUT

      # If there's a new HW release (submodule has been updated), add a commit to main branch
      - name: Commit and create pull request
        env:
          CI_COMMIT_MESSAGE: "CI: Update Caliptra RTL"
          CI_COMMIT_AUTHOR: "GitHub CI"
        if: ${{ steps.status.outputs.status }}
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"

      #- name: Run SW emulator tests
      #  uses: amd-isaac/caliptra-sw/.github/workflows/build-test.yml@isaac_nightly_release
      #  if: ${{ steps.status.outputs.status }}

      #- name: Run Verilator abbreviated tests
      #  uses: amd-isaac/caliptra-sw/.github/workflows/build-test-verilator.yml@isaac_nightly_release
      #  if: ${{ steps.status.outputs.status }}

      # If there's a new commit, push it now so we don't have to rerun the above tests again

      # Find the last successful release tag in the repo

      # Make sure there are commits between current and last successful release

      #- name: Run Verilator full tests
      #  uses: amd-isaac/caliptra-sw/.github/workflows/nightly-verilator.yml@isaac_nightly_release

      # FIXME: Use the correct release generation process here
      #- name: Generate release zip
      #  run: |
      #    mkdir /tmp/hw_release_${{ steps.date.outputs.date}}
      #    cp target/riscv32imc-unknown-none-elf/firmware/caliptra-rom /tmp/hw_release_${{ steps.date.outputs.date}}

      # FIXME: Tag with the correct "next release number"
      #- name: Upload release
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: release
      #    path: /tmp/hw_release_${{ steps.date.outputs.date }}/caliptra-rom

      # Add "next release number" to the repo as a tag, then push it


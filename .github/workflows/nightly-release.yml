name: Nightly Release

on:
  #push:
  workflow_dispatch:

jobs:
  rtl-repo-sync:
    name: RTL Repo Sync
    uses: amd-isaac/caliptra-sw/.github/workflows/rtl-repo-sync.yml@isaac_nightly_release

  find-latest-release:
    name: Find Latest Release
    needs: rtl-repo-sync
    runs-on: ubuntu-22.04
    outputs:
      create_release: ${{ steps.find.outputs.create_release }}
      new_release_tag: ${{ steps.find.outputs.new_release_tag }}
      release_ref: ${{ steps.find.outputs.release_ref }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          ref: 'main'

      - name: Find latest release
        id: find
        run: |
          git config --global user.name "GitHub CI"
          git config --global user.email "username@users.noreply.github.com"
          TAG_BASE=release_v
          INDEX=0
          MOST_RECENT_RELEASE=None
          while git tag | grep ${TAG_BASE}${INDEX}
          do
              MOST_RECENT_RELEASE=$(git tag | grep ${TAG_BASE}${INDEX} | head -1)
              ((INDEX+=1))
          done
          if [[ "$MOST_RECENT_RELEASE" == "None" ]]; then
              echo "create_release=true" >> $GITHUB_OUTPUT
          else
              COMMITS_AFTER_LAST_RELEASE=$(git rev-list --count $MOST_RECENT_RELEASE..HEAD)
              if [[ $COMMITS_AFTER_LAST_RELEASE -gt 0 ]]; then
                  echo "create_release=true" >> $GITHUB_OUTPUT
              else
                  echo "create_release=false" >> $GITHUB_OUTPUT
              fi
          fi
          echo "new_release_tag=${TAG_BASE}${INDEX}" >> $GITHUB_OUTPUT
          echo "release_ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  verilator-full-suite:
    name: Temp1
    runs-on: ubuntu-22.04
    needs: find-latest-release
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          ref: 'main'

  #verilator-full-suite:
  #  name: Nightly Verilator Suite
  #  needs: find-latest-release
  #  if: needs.find-latest-release.outputs.create_release
  #  uses: amd-isaac/caliptra-sw/.github/workflows/nightly-verilator.yml@isaac_nightly_release
  #  with:
  #    ref: ${{ needs.find-latest-release.outputs.release_ref }}

  create-release:
    name: Create New Release
    needs: [find-latest-release, verilator-full-suite]
    runs-on: ubuntu-22.04

    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          ref: ${{ needs.find-latest-release.outputs.release_ref }}

      # FIXME: Use the correct release generation process here
      - name: Generate release zip
        run: |
          mkdir /tmp/hw_release_${{ steps.date.outputs.date }}
          cp target/riscv32imc-unknown-none-elf/firmware/caliptra-rom /tmp/hw_release_${{ steps.date.outputs.date }}

      # FIXME: Tag with the correct "next release number"
      - name: Upload release
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: /tmp/hw_release_${{ steps.date.outputs.date }}/caliptra-rom

      - name: Tag repo with new release number
        run: |
          git config --global user.name "GitHub CI"
          git config --global user.email "username@users.noreply.github.com"
          git tag ${{ needs.find-latest-release.outputs.new_release_tag }}
          git push origin ${{ needs.find-latest-release.outputs.new_release_tag }}


